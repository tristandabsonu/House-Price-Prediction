['layoutProps']['digitalData']['page']['pageInfo']["property"]
-agency
-bathrooms
-bedrooms
-daysListed
-inspectionsCount
-hasPhoto
-hasFloorplan
-hasDisplayPrice
-hasDescription
-parking
-photoCount
-listingUrl
-listingId

-['componentProps']['rootGraphQuery']['listingByIdV2']['features']
-['componentProps']['rootGraphQuery']['listingByIdV2']['promoLevel']
-['componentProps']['rootGraphQuery']['listingByIdV2']['propertyTypes']
-['componentProps']['rootGraphQuery']['listingByIdV2']['soldDate']['isoDate']
-['componentProps']['rootGraphQuery']['listingByIdV2']['isRural']
-['componentProps']['rootGraphQuery']['listingByIdV2']['landAreaSqm']

-['componentProps']['rootGraphQuery']['listingByIdV2']['soldDetails']['soldPrice']['rawValues']['exactPrice']

['componentProps']['rootGraphQuery']['listingByIdV2']['displayableAddress']
-unitNumber
-streetNumber
-street
-suburbName
-state
-postcode

['componentProps']['rootGraphQuery']['listingByIdV2']['displayableAddress']['geolocation']
-latitude
-logitude

-['componentProps']['schoolCatchment']['schools']
schools is a list

for i in len(data):
    if data[i]['educationLevel'].lower() == 'primary':
        data = data[i]
        schoolName = data['name']
        schoolDistance = data['distance']
        schooleType = ['type']


['componentProps']['suburbInsights']
-medianPrice
-medianRentPrice
-entryLevelPrice
-luxuryLevelPrice


###########################################
Variable Order
###########################################
listingId
unitNumber
streetNumber
street
suburbName
state
postcode
bathrooms
bedrooms
parking
landAreaSqm
latitude
longitude
features
agency
propertyTypes
promoLevel
soldDate
daysListed
inspectionsCount
isRural
hasDescription
hasFloorplan
hasDisplayPrice
hasPhoto
photoCount
suburb_medianPrice
suburb_medianRentPrice
suburb_entryLevelPrice
suburb_luxuryLevelPrice
primaryschool_Name
primaryschool_Distance
primaryschool_Type
secondaryschool_Name
secondaryschool_Distance
secondaryschool_Type
listingUrl
soldPrice